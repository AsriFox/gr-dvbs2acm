/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(ldpc_decoder_hybrid_cb.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(c216bd8b9412c75f23dfb70c0a78dd53)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dvbs2acm/ldpc_decoder_hybrid_cb.h>
// pydoc.h is automatically generated in the build directory
#include <ldpc_decoder_hybrid_cb_pydoc.h>

void bind_ldpc_decoder_hybrid_cb(py::module& m)
{

    using ldpc_decoder_hybrid_cb    = ::gr::dvbs2acm::ldpc_decoder_hybrid_cb;


    py::class_<ldpc_decoder_hybrid_cb, gr::block, gr::basic_block,
        std::shared_ptr<ldpc_decoder_hybrid_cb>>(m, "ldpc_decoder_hybrid_cb", D(ldpc_decoder_hybrid_cb))

        .def(py::init(&ldpc_decoder_hybrid_cb::make),
           py::arg("infomode") = false,
           py::arg("max_trials") = 25,
           py::arg("debug_level") = 0,
           D(ldpc_decoder_hybrid_cb,make)
        )
        




        
        .def("get_snr",&ldpc_decoder_hybrid_cb::get_snr,       
            D(ldpc_decoder_hybrid_cb,get_snr)
        )


        
        .def("get_average_trials",&ldpc_decoder_hybrid_cb::get_average_trials,       
            D(ldpc_decoder_hybrid_cb,get_average_trials)
        )

        ;




}








