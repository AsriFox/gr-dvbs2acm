id: dvbs2acm_modcod_probe
label: MODCOD Probe
flags: [ show_id, python ]

parameters:
- id: block_id
  label: Block ID
  dtype: name
  default: dvbs2acm_tx_hier_0
- id: poll_rate
  label: Poll Rate (Hz)
  dtype: real
  default: '10' 
- id: value
  label: Initial Value
  dtype: raw
  default: '0'
  hide: part
value: ${ value }

templates:
  imports: |-
    import time
    import threading
  var_make: self.${id} = ${id} = ${value}
  make: |+
    def _${id}_probe():
      while True:
        <% obj = 'self' + ('.' + block_id if block_id else '') %>
        val = ${obj}.get_modcod()
        try:
          try:
            self.doc.add_next_tick_callback(functools.partial(self.set_${id}, val))
          except AttributeError:
            self.set_${id}(val)
        except AttributeError:
          pass
        time.sleep(1.0 / (${poll_rate}))
    _${id}_thread = threading.Thread(target=_${id}_probe)
    _${id}_thread.daemon = True
    _${id}_thread.start()
  callbacks:
  - self.set_${id}(${value})

documentation: |-
  See also: https://wiki.gnuradio.org/index.php/Function_Probe

  Periodically probe a DVB-S2 ACM Transmitter and forward the MODCOD value to this variable.

file_format: 1
