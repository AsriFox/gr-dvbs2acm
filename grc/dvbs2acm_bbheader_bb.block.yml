id: dvbs2acm_bbheader_bb
label: BB Header ACM
category: '[DVB]/DVB-S2 ACM/Transmitter'

parameters:
- id: framesize
  label: FECFRAME size
  dtype: enum
  options: [FECFRAME_NORMAL, FECFRAME_MEDIUM, FECFRAME_SHORT]
  option_labels: [Normal, Medium, Short]
  option_attributes:
    hide_medium: [all, none, all]
    hide_normal: [none, all, all]
    hide_short: [all, all, none]
    val: [dvbs2.FECFRAME_NORMAL, dvbs2.FECFRAME_MEDIUM, dvbs2.FECFRAME_SHORT]
- id: rate_1
  label: Code rate
  dtype: enum
  options: [C1_4, C1_3, C2_5, C1_2, C3_5, C2_3, C3_4, C4_5, C5_6, C8_9, C9_10, C2_9_VLSNR,
    C13_45, C9_20, C90_180, C96_180, C11_20, C100_180, C104_180, C26_45, C18_30,
    C28_45, C23_36, C116_180, C20_30, C124_180, C25_36, C128_180, C13_18, C132_180,
    C22_30, C135_180, C140_180, C7_9, C154_180]
  option_labels: [1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 8/9, 9/10, 2/9 VL-SNR,
    13/45, 9/20, 90/180, 96/180, 11/20, 100/180, 104/180, 26/45, 18/30, 28/45,
    23/36, 116/180, 20/30, 124/180, 25/36, 128/180, 13/18, 132/180, 22/30, 135/180,
    140/180, 7/9, 154/180]
  option_attributes:
    val: [dvbs2.C1_4, dvbs2.C1_3, dvbs2.C2_5, dvbs2.C1_2, dvbs2.C3_5, dvbs2.C2_3,
      dvbs2.C3_4, dvbs2.C4_5, dvbs2.C5_6, dvbs2.C8_9, dvbs2.C9_10, dvbs2.C2_9_VLSNR,
      dvbs2.C13_45, dvbs2.C9_20, dvbs2.C90_180, dvbs2.C96_180, dvbs2.C11_20,
      dvbs2.C100_180, dvbs2.C104_180, dvbs2.C26_45, dvbs2.C18_30, dvbs2.C28_45,
      dvbs2.C23_36, dvbs2.C116_180, dvbs2.C20_30, dvbs2.C124_180, dvbs2.C25_36,
      dvbs2.C128_180, dvbs2.C13_18, dvbs2.C132_180, dvbs2.C22_30, dvbs2.C135_180,
      dvbs2.C140_180, dvbs2.C7_9, dvbs2.C154_180]
  hide: ${ framesize1.hide_normal }
- id: rate_2
  label: Code rate
  dtype: enum
  options: [C1_5_MEDIUM, C11_45_MEDIUM, C1_3_MEDIUM]
  option_labels: [1/5, 11/45, 1/3]
  option_attributes:
    val: [dvbs2.C1_5_MEDIUM, dvbs2.C11_45_MEDIUM, dvbs2.C1_3_MEDIUM]
  hide: ${ framesize1.hide_medium }
- id: rate_3
  label: Code rate
  dtype: enum
  options: [C1_4, C1_3, C2_5, C1_2, C3_5, C2_3, C3_4, C4_5, C5_6, C8_9, C11_45,
    C4_15, C14_45, C7_15, C8_15, C26_45, C32_45, C1_5_VLSNR_SF2, C11_45_VLSNR_SF2,
    C1_5_VLSNR, C4_15_VLSNR, C1_3_VLSNR]
  option_labels: [1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 8/9, 11/45, 4/15,
    14/45, 7/15, 8/15, 26/45, 32/45, 1/5 VL-SNR SF2, 11/45 VL-SNR SF2, 1/5 VL-SNR,
    4/15 VL-SNR, 1/3 VL-SNR]
  option_attributes:
    val: [dvbs2.C1_4, dvbs2.C1_3, dvbs2.C2_5, dvbs2.C1_2, dvbs2.C3_5, dvbs2.C2_3,
      dvbs2.C3_4, dvbs2.C4_5, dvbs2.C5_6, dvbs2.C8_9, dvbs2.C11_45, dvbs2.C4_15,
      dvbs2.C14_45, dvbs2.C7_15, dvbs2.C8_15, dvbs2.C26_45, dvbs2.C32_45, dvbs2.C1_5_VLSNR_SF2,
      dvbs2.C11_45_VLSNR_SF2, dvbs2.C1_5_VLSNR, dvbs2.C4_15_VLSNR, dvbs2.C1_3_VLSNR]
  hide: ${ framesize1.hide_short }
- id: constellation
  label: Constellation
  dtype: enum
  options: [MOD_QPSK, MOD_8PSK, MOD_8APSK, MOD_16APSK, MOD_8_8APSK, MOD_32APSK,
    MOD_4_12_16APSK, MOD_4_8_4_16APSK, MOD_64APSK, MOD_8_16_20_20APSK, MOD_4_12_20_28APSK,
    MOD_128APSK, MOD_256APSK, MOD_BPSK, MOD_BPSK_SF2]
  option_labels: [QPSK, 8PSK, 8APSK, 16APSK, 8+8APSK, 32APSK, 4+12+16rbAPSK, 4+8+4+16APSK,
    64APSK, 8+16+20+20APSK, 4+12+20+28APSK, 128APSK, 256APSK, PI/2 BPSK, PI/2
    BPSK-SF2]
  option_attributes:
    val: [dvbs2.MOD_QPSK, dvbs2.MOD_8PSK, dvbs2.MOD_8APSK, dvbs2.MOD_16APSK, dvbs2.MOD_8_8APSK,
      dvbs2.MOD_32APSK, dvbs2.MOD_4_12_16APSK, dvbs2.MOD_4_8_4_16APSK, dvbs2.MOD_64APSK,
      dvbs2.MOD_8_16_20_20APSK, dvbs2.MOD_4_12_20_28APSK, dvbs2.MOD_128APSK,
      dvbs2.MOD_256APSK, dvbs2.MOD_BPSK, dvbs2.MOD_BPSK_SF2]
- id: pilots
  label: Pilots
  dtype: enum
  options: [PILOTS_OFF, PILOTS_ON]
  option_labels: ['Off', 'On']
  option_attributes:
    val: [dvbs2.PILOTS_OFF, dvbs2.PILOTS_ON]
- id: rolloff
  label: Rolloff factor
  dtype: enum
  options: [RO_0_35, RO_0_25, RO_0_20, RO_0_15, RO_0_10, RO_0_05]
  option_labels: ['0.35', '0.25', '0.20', '0.15', '0.10', '0.05']
  option_attributes:
    val: [dvbs2.RO_0_35, dvbs2.RO_0_25, dvbs2.RO_0_20, dvbs2.RO_0_15, dvbs2.RO_0_10, dvbs2.RO_0_05]
- id: goldcode
  label: Gold Code
  dtype: int
  default: '0'

inputs:
- domain: stream
  dtype: byte
  # multiplicity: ${ nstreams }
  
outputs:
- domain: stream
  dtype: byte

templates:
  imports: from gnuradio import dvbs2acm
  make: "dvbs2acm.bbheader_bb(\
          \ ${framesize.val},\
          \ % if str(framesize) == 'FECFRAME_NORMAL':\n\
          \   ${rate_1.val},\n\
          \ % elif str(framesize) == 'FECFRAME_SHORT':\n\
          \   ${rate_2.val},\n\
          \ % else:\n${rate_3.val},\n\
          \ % endif\n\
          \ ${constellation.val},\
          \ ${pilots.val},\
          \ ${rolloff.val},\
          \ ${goldcode.val})"

file_format: 1
